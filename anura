#!/bin/bash -e

cliName=${0##*/}

cliHelp(){ # help text to be printed when 'anura' is run with unrecognized arguments
    echo "
    This is a CLI for interacting with the Jfrog project Anura
    
    Usage: $cliName [command]
    
    Commands:
        connect     ** must include 'source' (source anura connect)** Authenticates the current session to the Anura project
        ping        System ping (/readiness endpoint)
        version     Returns system version info
        get         Returns info from the Anura project
        create      Creates the specified resource in the Anura project
        delete      Deletes the specified resource from the Anura project
        help        Help
    "
    exit 1
}

getHelp(){ # help text to be printed when 'anura' is run with the 'get' verb and unrecognized arguments
    echo "
    This is a CLI for interacting with the Jfrog project Anura
    
    Usage: $cliName get [args]
    
    Args:
        storage     Returns storage info
        repos       Lists repositories
        help        Help
    "
    exit 1
}

createHelp(){ # help text to be printed when 'anura' is run with the 'create' verb and unrecognized arguments
    echo "
    This is a CLI for interacting with the Jfrog project Anura
    
    Usage: $cliName create [args]
    
    Args:
        repo        Create new Repo
        user        create user
        help        Help
    "
    exit 1
}

deleteHelp(){ # help text to be printed when 'anura' is run with the 'delete' verb and unrecognized arguments
    echo "
    This is a CLI for interacting with the Jfrog project Anura
    
    Usage: $cliName delete [args]
    
    Args:
        repo        Delete specified Repo
        user        Delete specified user
        help        Help
    "
    exit 1
}

case $1 in 
    connect)
        read -p "Username: " username
        read -p "Password: " -s password
        curl -s -u "$username:$password" -XPOST https://anura.jfrog.io/artifactory/api/security/apiKey &> /dev/null # If the apikey does not exist, first create it.
        keyJson=$(curl -s -u "$username:$password" https://anura.jfrog.io/artifactory/api/security/apiKey) 
        password="" # Clear password variable
        keyJson=${keyJson%%","*}
        keyJson=${keyJson##*":"}
        keyJson=${keyJson//"}"/}
        export apiKey=${keyJson//\"/} #set 'apiKey' to be used in following calls to the anura project
        echo ""
        echo "Testing connection..."
        curl -H "X-JFrog-Art-API:$apiKey" https://anura.jfrog.io/artifactory/api/v1/system/readiness # Test the set 'apiKey'
        ;;
    ping)
        curl -H "X-JFrog-Art-API:$apiKey" https://anura.jfrog.io/artifactory/api/v1/system/readiness
        ;;
    version)
        curl -H "X-JFrog-Art-API:$apiKey" https://anura.jfrog.io/artifactory/api/system/version
        ;;
    create)
        case $2 in
            repo)
                curl -H "X-JFrog-Art-API:$apiKey" -H 'Content-Type:Application/Json' -XPOST https://anura.jfrog.io/artifactory/api/repositories/TF -d '{"key":"TF","rclass": "LOCAL","packageType":"terraform"}'
            ;;
            user)
                createHelp #curl -H "X-JFrog-Art-API:$apiKey" https://anura.jfrog.io/artifactory/api/v1/scim/v2/Users
            ;;
            *)
                createHelp
            esac
        ;;
    delete)
        case $2 in
            repo)
                curl -H "X-JFrog-Art-API:$apiKey" -XDELETE https://anura.jfrog.io/artifactory/api/repositories/$3
            ;;
            user)
                deleteHelp #curl -H "X-JFrog-Art-API:$apiKey" -XDELETE https://anura.jfrog.io/artifactory/api/v1/scim/v2/Users
            ;;
            *)
                deleteHelp
            esac
        ;;
    get)
        case $2 in
            storage)
                curl -H "X-JFrog-Art-API:$apiKey" https://anura.jfrog.io/artifactory/api/storageinfo
            ;;
            repos)
                curl -H "X-JFrog-Art-API:$apiKey" https://anura.jfrog.io/artifactory/api/repositories
            ;;
            *)
                getHelp
            esac
        ;;
    *)
        cliHelp
esac
